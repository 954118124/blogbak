(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{514:function(t,e,r){"use strict";r.r(e);var s=r(18),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"_1-什么是springmvc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是springmvc"}},[t._v("#")]),t._v(" 1 什么是SpringMVC？")]),t._v(" "),r("p",[t._v("SpringMVC是一个轻量级的web框架。")]),t._v(" "),r("p",[t._v("SpringMVC把web应用分成几个清晰的模块，分别是model、view、controller。")]),t._v(" "),r("p",[t._v("SpringMVC可以使用各种视图技术，不仅仅局限于jsp。")]),t._v(" "),r("h2",{attrs:{id:"_2-springmvc的执行流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-springmvc的执行流程"}},[t._v("#")]),t._v(" 2 SpringMVC的执行流程")]),t._v(" "),r("img",{staticClass:"imgcss",attrs:{src:"http://media.luoxiaofeng.cn/blog/img/5744d9ada479464196d53a25c736ca64.png"}}),t._v(" "),r("p",[t._v("1.客户端发送请求到前端控制器DispatcheServlet。")]),t._v(" "),r("p",[t._v("2.DispatcheServlet通过处理器映射器HandlerMapping获取处理器Handler。（处理器映射器返回处理器执行链，包含处理器Handler和拦截器HandlerInterceptor）。")]),t._v(" "),r("p",[t._v("3.DispatcheServlet通过处理器适配器HandlerAdapter执行Handler。（Handler也就是controller）")]),t._v(" "),r("p",[t._v("4.Handler执行完后返回ModelAndView给到DispatcheServlet。")]),t._v(" "),r("p",[t._v("5.DispatcheServlet将ModelAndView传给ViewResolver（视图解析器）做解析。")]),t._v(" "),r("p",[t._v("6.ViewResolver（视图解析器）解析完返回View视图对象给到DispatcherServlet。")]),t._v(" "),r("p",[t._v("7.DispatcherServlet把Model数据填充到View试图对象中。")]),t._v(" "),r("p",[t._v("8.响应用户。")]),t._v(" "),r("h2",{attrs:{id:"_3-springmvc怎么样设定重定向和转发的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-springmvc怎么样设定重定向和转发的"}},[t._v("#")]),t._v(" 3 SpringMVC怎么样设定重定向和转发的？")]),t._v(" "),r("p",[t._v('（1）转发：在返回值前面加"forward:"，譬如"forward:user.do?name=method4"')]),t._v(" "),r("p",[t._v('（2）重定向：在返回值前面加"redirect:"，譬如"redirect:http://www.baidu.com"')]),t._v(" "),r("h2",{attrs:{id:"_4-springmvc常用的注解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-springmvc常用的注解"}},[t._v("#")]),t._v(" 4 SpringMVC常用的注解")]),t._v(" "),r("p",[r("strong",[t._v("@RequestMapping")]),t._v("：用于处理请求 url 映射的注解，可用于类或方法上。用于类上，则表示类中的所有响应请求的方法都是以该地址作为父路径。")]),t._v(" "),r("p",[r("strong",[t._v("@RequestBody")]),t._v("：注解实现接收http请求的json数据，将json转换为java对象。")]),t._v(" "),r("p",[r("strong",[t._v("@ResponseBody")]),t._v("：注解实现将conreoller方法返回对象转化为json对象响应给客户。")]),t._v(" "),r("h2",{attrs:{id:"_5-spingmvc中控制器的注解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-spingmvc中控制器的注解"}},[t._v("#")]),t._v(" 5 SpingMVC中控制器的注解")]),t._v(" "),r("p",[r("strong",[t._v("一般用@Controller注解，也可以使用@RestController。")])]),t._v(" "),r("p",[t._v("@RestController注解相当于@ResponseBody ＋ @Controller，表示是表现层，除此之外，一般不用别的注解代替。")]),t._v(" "),r("h2",{attrs:{id:"_6-post及get请求中文乱码问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-post及get请求中文乱码问题"}},[t._v("#")]),t._v(" 6 POST及GET请求中文乱码问题")]),t._v(" "),r("p",[r("strong",[t._v("（1）解决post请求乱码问题：")])]),t._v(" "),r("p",[t._v("在web.xml中配置一个CharacterEncodingFilter过滤器，设置成utf-8。")]),t._v(" "),r("img",{staticClass:"imgcss",attrs:{src:"http://media.luoxiaofeng.cn/blog/img/3f2ba0e9f56635032535dc28527f8d56.png",width:"70%"}}),t._v(" "),r("p",[r("strong",[t._v("（2）get请求中文参数出现乱码解决方法有两个：")])]),t._v(" "),r("p",[t._v("① 修改tomcat配置文件添加编码与工程编码一致，如下：")]),t._v(" "),r("img",{staticClass:"imgcss",attrs:{src:"http://media.luoxiaofeng.cn/blog/img/a9e0a494a5f828d49842b1d1eab31a5d.png",width:"70%"}}),t._v(" "),r("p",[t._v("② 另外一种方法对参数进行重新编码：")]),t._v(" "),r("img",{staticClass:"imgcss",attrs:{src:"http://media.luoxiaofeng.cn/blog/img/cdfa434045574d34d4efa592c09a3506.png",width:"70%"}}),t._v(" "),r("p",[t._v("ISO8859-1是tomcat默认编码，需要将tomcat编码后的内容按utf-8编码。")]),t._v(" "),r("h2",{attrs:{id:"_7-springmvc控制器是不是单例-有什么问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-springmvc控制器是不是单例-有什么问题"}},[t._v("#")]),t._v(" 7 SpringMVC控制器是不是单例？有什么问题？")]),t._v(" "),r("p",[t._v("1.是单例模式。")]),t._v(" "),r("p",[t._v("2.在多线程访问的时候有线程安全问题。")]),t._v(" "),r("p",[t._v("3.解决方案是在控制器里面不能写可变状态量，如果需要这些可变状态，可以使用ThreadLocal机制解决，为每个线程单独生成一份变量副本，独立操作，互不影响。")]),t._v(" "),r("h2",{attrs:{id:"_8-拦截请求中-怎么拦截get方式提交的方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-拦截请求中-怎么拦截get方式提交的方法"}},[t._v("#")]),t._v(" 8 拦截请求中，怎么拦截get方式提交的方法？")]),t._v(" "),r("p",[t._v("可以在@RequestMapping注解里面加上method=RequestMethod.GET。")]),t._v(" "),r("h2",{attrs:{id:"_9-怎样在方法里面得到request-或者session"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-怎样在方法里面得到request-或者session"}},[t._v("#")]),t._v(" 9 怎样在方法里面得到Request，或者Session？")]),t._v(" "),r("p",[t._v("直接在方法的形参中声明request，SpringMvc就自动把request对象传入。")])])}),[],!1,null,null,null);e.default=a.exports}}]);