(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{541:function(t,s,a){"use strict";a.r(s);var _=a(18),v=Object(_.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-pv-qps-tps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-pv-qps-tps"}},[t._v("#")]),t._v(" 1 pv｜qps｜tps")]),t._v(" "),a("p",[a("strong",[t._v("pv")]),t._v(" Page view，即页面浏览量。")]),t._v(" "),a("p",[a("strong",[t._v("qps")]),t._v(" Queries Per Second 秒查询率QPS是对一个特定的查询服务器在规定时间内所处理流量多少的衡量标准。在因特网上，作为域名系统服务器的机器的性能经常用每秒查询率来衡量。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("每天80%的访问集中在20%的时间里，这20%时间叫做峰值时间\n\n公式：( 总PV数 * 80% ) / ( 每天秒数 * 20% ) = 峰值时间每秒请求数(QPS)\n\n机器：峰值时间每秒QPS / 单台机器的QPS = 需要的机器\n\n问：每天300w PV 的在单台机器上，这台机器需要多少QPS？\n\n答：( 3000000 * 0.8 ) / (86400 * 0.2 ) = 139 (QPS)\n\n问：如果一台机器的QPS是58，需要几台机器来支持？\n\n答：139 / 58 = 3\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("p",[a("strong",[t._v("tps")]),t._v(" Transactions Per Second（每秒传输的事物处理个数），即服务器每秒处理的事务数。TPS包括一条消息入和一条消息出，加上一次用户数据库访问。")]),t._v(" "),a("p",[t._v("一般的，评价系统性能均以每秒钟完成的技术交易的数量来衡量。系统整体处理能力取决于处理能力最低模块的TPS值。")]),t._v(" "),a("h2",{attrs:{id:"_2-如何进行容量设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何进行容量设计"}},[t._v("#")]),t._v(" 2 如何进行容量设计")]),t._v(" "),a("p",[t._v("**1.评估总访问量：**询问业务、产品、运营")]),t._v(" "),a("p",[a("strong",[t._v("2.评估平均QPS")]),t._v("：假设按天来计算，")]),t._v(" "),a("p",[t._v("1天的总访问量（假设8000w） / 12小时（假设只有白天有流量）")]),t._v(" "),a("p",[t._v("= 8000w / 约4万秒")]),t._v(" "),a("p",[t._v("= 2000QPS")]),t._v(" "),a("p",[a("strong",[t._v("3.评估高峰的QPS")]),t._v("：需要根据具体业务特性，通过业务访问曲线来评估，")]),t._v(" "),a("p",[t._v("如：")]),t._v(" "),a("img",{staticClass:"imgcss",attrs:{src:"/img/media/97deb900310d7989744b4e5bf4793950.png",width:"50%"}}),t._v(" "),a("p",[t._v("峰值QPS约为平均QPS的2.5倍，即2000 * 2.5 = 5000QPS")]),t._v(" "),a("p",[a("strong",[t._v("4.评估系统、单机的极限QPS")]),t._v("：需要通过压测")]),t._v(" "),a("img",{staticClass:"imgcss",attrs:{src:"/img/media/a32d70b83623d11c01c266d4bc6065d5.png",width:"50%"}}),t._v(" "),a("p",[t._v("假设系统架构如上图，5000QPS的1%流量打到mysql，即500QPS，mysql还是可以轻松应对，另外99%打到redis也没有任何问题。则需要考虑的主要在web层，tomcat能不能扛的住。假设通过压测发现tomcat能扛1200QPS，线上系统一般不会泡满到极限，大概打个8折，差不多1000QPS。所以单机线上允许跑1000QPS。")]),t._v(" "),a("p",[a("strong",[t._v("5.线上机器评估")]),t._v("：假设线上部署了2台机器，")]),t._v(" "),a("p",[t._v("1）机器能扛得住吗：峰值5000QPS，单机能扛1000QPS，2台机器扛不住。")]),t._v(" "),a("p",[t._v("2）扛不住要加多少机器：需要额外3台，另外预留多1台，给4台更稳。")]),t._v(" "),a("h2",{attrs:{id:"_3-tomcat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-tomcat"}},[t._v("#")]),t._v(" 3 tomcat")]),t._v(" "),a("h3",{attrs:{id:"_3-1-tomcat支持多少并发量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-tomcat支持多少并发量"}},[t._v("#")]),t._v(" 3.1 tomcat支持多少并发量")]),t._v(" "),a("p",[t._v("Tomcat的最大并发数是可以配置的，实际运用中，最大并发数与硬件性能和CPU数量都有很大关系的。更好的硬件，更多的处理器都会使Tomcat支持更多的并发。")]),t._v(" "),a("p",[t._v("Tomcat默认的HTTP实现是采用阻塞式的Socket通信，每个请求都需要创建一个线程处理，当一个进程有500个线程在跑的话，那性能已经是很低很低了。Tomcat 默认配置的最大请求数是150，也就是说同时支持150个并发。具体能承载多少并发，需要看硬件的配置，CPU越多性能越高，分配给JVM的内存越多性能也就越高，但也会加重GC的负担。")]),t._v(" "),a("p",[t._v("当某个应用拥有 250 个以上并发的时候，应考虑应用服务器的集群。")]),t._v(" "),a("p",[a("strong",[t._v("操作系统对于进程中的线程数有一定的限制：")])]),t._v(" "),a("p",[t._v("Windows 每个进程中的线程数不允许超过 2000")]),t._v(" "),a("p",[t._v("Linux 每个进程中的线程数不允许超过 1000")]),t._v(" "),a("p",[a("strong",[t._v("在Java中每开启一个线程需要耗用1MB的JVM内存空间用于作为线程栈之用，此处也应考虑。")])]),t._v(" "),a("h3",{attrs:{id:"_3-2-tomcat参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-tomcat参数"}},[t._v("#")]),t._v(" 3.2 tomcat参数")]),t._v(" "),a("p",[a("strong",[t._v("maxConnections、maxThreads、acceptCount关系")])]),t._v(" "),a("p",[t._v("用一个形象的比喻，通俗易懂的解释一下tomcat的"),a("strong",[t._v("最大线程数（maxThreads）")]),t._v("、**最大等待数（acceptCount）"),a("strong",[t._v("和")]),t._v("最大连接数（maxConnections）**三者之间的关系。")]),t._v(" "),a("p",[t._v("我们可以把tomcat比做一个火锅店，流程是取号、入座、叫服务员，可以做一下三个形象的类比：")]),t._v(" "),a("p",[t._v("（1）"),a("strong",[t._v("acceptCount 最大等待数")])]),t._v(" "),a("p",[t._v("可以类比为火锅店的排号处能够容纳排号的最大数量；排号的数量不是无限制的，火锅店的排号到了一定数据量之后，服务往往会说：已经客满。")]),t._v(" "),a("p",[t._v("（2）"),a("strong",[t._v("maxConnections 最大连接数")])]),t._v(" "),a("p",[t._v("可以类比为火锅店的大堂的餐桌数量，也就是可以就餐的桌数。如果所有的桌子都已经坐满，则表示餐厅已满，已经达到了服务的数量上线，不能再有顾客进入餐厅了。")]),t._v(" "),a("p",[t._v("（3）"),a("strong",[t._v("maxThreads：最大线程数")])]),t._v(" "),a("p",[t._v("可以类比为厨师的个数。每一个厨师，在同一时刻，只能给一张餐桌炒菜，就像极了JVM中的一条线程。")]),t._v(" "),a("p",[a("strong",[t._v("整个就餐的流程，大致如下：")])]),t._v(" "),a("p",[t._v("（1）"),a("strong",[t._v("取号")]),t._v("：")]),t._v(" "),a("p",[t._v("如果maxConnections连接数没有满，就不需要取号，因为还有空余的餐桌，直接被大堂服务员领上餐桌，就餐即可。")]),t._v(" "),a("p",[t._v("如果 maxConnections 连接数满了，但是取号人数没有达到 acceptCount，则取号成功。如果取号人数已达到acceptCount，则拿号失败，会得到Tomcat的Connection refused connect 的回复信息。")]),t._v(" "),a("p",[t._v("（2）"),a("strong",[t._v("上桌")]),t._v("：如果有餐桌空出来了，表示maxConnections连接数没有满，排队的人，可以进入大堂上桌就餐。")]),t._v(" "),a("p",[t._v("（3）"),a("strong",[t._v("就餐")]),t._v("：就餐需要厨师炒菜。厨师的数量，比顾客的数量，肯定会少一些。一个厨师一定需要给多张餐桌炒菜，如果就餐的人越多，厨师也会忙不过来。这时候就可以增加厨师，一增加到上限maxThreads的值，如果还是不够，只能是拖慢每一张餐桌的上菜速度，这种情况，就是大家常见的“上一道菜吃光了，下一道菜还没有上”尴尬场景。")]),t._v(" "),a("img",{staticClass:"imgcss",attrs:{src:"/img/media/b13a336a731fa78534596c7ee2124510.png",width:"60%"}})])}),[],!1,null,null,null);s.default=v.exports}}]);