(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{553:function(s,a,t){"use strict";t.r(a);var n=t(18),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-es数据与mysql数据不一致"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-es数据与mysql数据不一致"}},[s._v("#")]),s._v(" 1 Es数据与Mysql数据不一致")]),s._v(" "),t("p",[t("strong",[s._v("原因：")]),s._v("\n批量操作高峰期，频繁更新数据库导致同步堆积，数据未能及时同步到Es。")]),s._v(" "),t("p",[t("strong",[s._v("解决方案：")]),s._v("\n批量任务控制并发数，控制更新速率。")]),s._v(" "),t("h2",{attrs:{id:"_2-内部feign自调用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-内部feign自调用"}},[s._v("#")]),s._v(" 2 内部feign自调用")]),s._v(" "),t("p",[t("strong",[s._v("描述：")]),s._v("\n订单运单解藕，外部接口调用临时改内部feign调用自己，服务重启后出现大量错误。")]),s._v(" "),t("p",[t("strong",[s._v("原因：")]),s._v("\n节点启动有先后顺序，先启动的节点feign调用自己服务时调用的是旧节点，导致调用不到新接口。")]),s._v(" "),t("p",[t("strong",[s._v("解决方案：")]),s._v("\n避免使用feign调用自己服务这种临时方案。")]),s._v(" "),t("h2",{attrs:{id:"_3-服务切oracle后出现内存溢出情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-服务切oracle后出现内存溢出情况"}},[s._v("#")]),s._v(" 3 服务切oracle后出现内存溢出情况")]),s._v(" "),t("p",[t("strong",[s._v("原因：")]),s._v("\n按多个运单号查询列表，先查一个月内将命中数据放到内存，查不到的去掉时间范围再查，最后合并内存中的数据及后面查的数据高峰期接口调用量大导致内存迅速被占满。")]),s._v(" "),t("p",[t("strong",[s._v("解决方案：")]),s._v("\n按运单号查询数据库，由于运单号是全局唯一索引，查询速度足够快，不需要先查一个月再扩大到全部。\n"),t("br"),s._v("\n直接按运单号查询即可，这样就不需要将运单数据放在缓存中。")]),s._v(" "),t("h2",{attrs:{id:"_4-服务偶发性所有接口变慢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-服务偶发性所有接口变慢"}},[s._v("#")]),s._v(" 4 服务偶发性所有接口变慢")]),s._v(" "),t("p",[t("strong",[s._v("原因：")]),s._v("\n数据库连接数配置未生效，默认只有8，导致业务高峰期获取不到连接数影响接口响应。\n"),t("br"),s._v("\n代码里面获取的配置路径是spring.datasource.maxActive，配置文件里面配的是sping.datasource.druid.maxActive。")]),s._v(" "),t("p",[t("strong",[s._v("解决方案：")]),s._v("\n数据库配置调整正确，例：")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("datasource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("druid")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("initialSize")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("minIdle")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("maxActive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("maxWait")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60000")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"_5-mq消息发送阻塞影响相关接口调用变慢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-mq消息发送阻塞影响相关接口调用变慢"}},[s._v("#")]),s._v(" 5 MQ消息发送阻塞影响相关接口调用变慢")]),s._v(" "),t("p",[t("strong",[s._v("原因：")]),s._v("\nMQ消息消费缓慢，致使队列内存达到30多G触发流控。")]),s._v(" "),t("p",[t("strong",[s._v("解决方案：")]),s._v(" "),t("br"),s._v("\n1.删除多余、无效的消息发送\n"),t("br"),s._v("\n2.优化下游账单消费速度\n"),t("br"),s._v("\n3.优化消息体大小，去除不必要字段（后续）\n"),t("br"),s._v("\n4.调整为惰性队列（后续）")]),s._v(" "),t("h2",{attrs:{id:"_6-服务消费mq消息自动ack改手动ack出现消息堆积"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-服务消费mq消息自动ack改手动ack出现消息堆积"}},[s._v("#")]),s._v(" 6 服务消费MQ消息自动ACK改手动ACK出现消息堆积")]),s._v(" "),t("p",[t("strong",[s._v("原因：")]),s._v("\nMQ消费端指定了headers，导致不是该headers的消息一直未ack。")]),s._v(" "),t("p",[t("strong",[s._v("解决方案：")]),s._v("\n非指定headers的消息手动确认.")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Object o = payload.getHeaders().get(WAYBILL_MQ_HEADER);\nif (!String.valueOf(o).equals(WAYBILL_MQ_HEADER_VALUE)) {\n  channel.basicAck(deliveryTag, false); // 手动确认\n  return;\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"_7-young-gc-业务量大时耗时持续飙高"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-young-gc-业务量大时耗时持续飙高"}},[s._v("#")]),s._v(" 7 young gc 业务量大时耗时持续飙高")]),s._v(" "),t("p",[t("strong",[s._v("原因：")]),s._v("\n猜测跨年代对象引用")]),s._v(" "),t("p",[t("strong",[s._v("解决方案：")]),s._v(" "),t("br"),s._v("\nJVM调优 -XX:MaxTenuringThreshold=5 -XX:PretenureSizeThreshold=2M\n"),t("br"),s._v("\n调优原因：经分析每个线程从MQ拉取的对象信息为0.23M，MQ最大线程数为10，默认为0，\n"),t("br"),s._v("\n当业务量飙升时，线程扩容到10个，那么将这部分的大对象直接放入老年代，减轻年轻代压力。")]),s._v(" "),t("h2",{attrs:{id:"_8-查询接口超时"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-查询接口超时"}},[s._v("#")]),s._v(" 8 查询接口超时")]),s._v(" "),t("p",[t("strong",[s._v("原因：")]),s._v("\n使用了多表关联查询，其中还有一张大表，导致了查询速度缓慢。单条达到了40-80ms,当批量任务200条数据的请求过来，每次都需要处理将近8-16S。")]),s._v(" "),t("p",[t("strong",[s._v("解决方案：")]),s._v("\n拆sql语句。将多表的关联查询，拆成单表查询，并保证每个查询语句都落到索引，提高每张表的查询效率。优化后200条的批量在1s内可执行完成。")]),s._v(" "),t("h2",{attrs:{id:"_9-动态列导出列顺序错乱"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-动态列导出列顺序错乱"}},[s._v("#")]),s._v(" 9 动态列导出列顺序错乱")]),s._v(" "),t("p",[t("strong",[s._v("原因：")]),s._v("\n在动态列导出时，每次都会去修改VO类的导出字段顺序，在并发导出时，新请求动态列顺序会覆盖上一次动态列顺序，导致生成的文档顺序错乱。\n"),t("br"),s._v("\n覆盖原因是在类加载时会将类元信息存入元空间，每次修改都会更新元空间中的类信息，而不管有几个线程，在同一个JVM中，指向的类元信息都是同一个，所以在修改类元信息时，会互相影响。\n"),t("strong",[s._v("解决方案：")])]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("synchronized (voClass) {\n    List&lt;String> columnSet = new ArrayList&lt;>();\n    columnSet = customColumns.stream().map(item -> item.getName()).collect(Collectors.toList());\n    //构建动态导出header\n    Class&lt;V> headerClass = this.getCustomerHeaderClass(t, voClass, columnSet);\n    excelWriter.write(resultList, writeSheet);\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("在导出动态列执行write之前，加锁重新设置导出的列顺序，保证每次的列顺序都是当前线程所需要的，防止互相覆盖。")])])}),[],!1,null,null,null);a.default=e.exports}}]);